/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.9).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.openslice.tmf.scm638.api;

import io.openslice.tmf.scm638.model.Error;
import io.openslice.tmf.scm638.model.Service;
import io.openslice.tmf.scm638.model.ServiceCreate;
import io.openslice.tmf.scm638.model.ServiceUpdate;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-19T00:12:41.682+03:00")

@Api(value = "service", description = "the service API")
public interface ServiceApi {

    Logger log = LoggerFactory.getLogger(ServiceApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Creates a Service", nickname = "createService", notes = "This operation creates a Service entity.", response = Service.class, tags={ "service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created", response = Service.class),
        @ApiResponse(code = 400, message = "Bad Request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not allowed", response = Error.class),
        @ApiResponse(code = 409, message = "Conflict", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class) })
    @RequestMapping(value = "/service",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.POST)
    default ResponseEntity<Service> createService(@ApiParam(value = "The Service to be created" ,required=true )  @Valid @RequestBody ServiceCreate service) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"serviceType\" : \"serviceType\",  \"note\" : [ {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceDate\" : \"serviceDate\",  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",  \"supportingResource\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@type\" : \"@type\",  \"hasStarted\" : true,  \"description\" : \"description\",  \"serviceOrder\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceRelationship\" : [ {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@baseType\" : \"@baseType\",  \"id\" : \"id\",  \"href\" : \"href\",  \"place\" : [ {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"state\" : { },  \"@schemaLocation\" : \"http://example.com/aeiou\",  \"isStateful\" : true,  \"serviceCharacteristic\" : [ {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  }, {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  } ],  \"serviceSpecification\" : {    \"targetServiceSchema\" : {      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"@schemaLocation\" : \"@schemaLocation\"    },    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"version\" : \"version\"  },  \"supportingService\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"relatedParty\" : [ {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  }, {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  } ],  \"isServiceEnabled\" : true,  \"startMode\" : \"startMode\",  \"name\" : \"name\",  \"category\" : \"category\",  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"}", Service.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ServiceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Deletes a Service", nickname = "deleteService", notes = "This operation deletes a Service entity.", tags={ "service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Deleted"),
        @ApiResponse(code = 400, message = "Bad Request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 404, message = "Not Found", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not allowed", response = Error.class),
        @ApiResponse(code = 409, message = "Conflict", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class) })
    @RequestMapping(value = "/service/{id}",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteService(@ApiParam(value = "Identifier of the Service",required=true) @PathVariable("id") String id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ServiceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "List or find Service objects", nickname = "listService", notes = "This operation list or find Service entities", response = Service.class, responseContainer = "List", tags={ "service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Service.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Bad Request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 404, message = "Not Found", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not allowed", response = Error.class),
        @ApiResponse(code = 409, message = "Conflict", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class) })
    @RequestMapping(value = "/service",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.GET)
    default ResponseEntity<List<Service>> listService(@ApiParam(value = "Comma-separated properties to be provided in response") @Valid @RequestParam(value = "fields", required = false) String fields,@ApiParam(value = "Requested index for start of resources to be provided in response") @Valid @RequestParam(value = "offset", required = false) Integer offset,@ApiParam(value = "Requested number of resources to be provided in response") @Valid @RequestParam(value = "limit", required = false) Integer limit) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {  \"serviceType\" : \"serviceType\",  \"note\" : [ {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceDate\" : \"serviceDate\",  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",  \"supportingResource\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@type\" : \"@type\",  \"hasStarted\" : true,  \"description\" : \"description\",  \"serviceOrder\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceRelationship\" : [ {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@baseType\" : \"@baseType\",  \"id\" : \"id\",  \"href\" : \"href\",  \"place\" : [ {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"state\" : { },  \"@schemaLocation\" : \"http://example.com/aeiou\",  \"isStateful\" : true,  \"serviceCharacteristic\" : [ {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  }, {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  } ],  \"serviceSpecification\" : {    \"targetServiceSchema\" : {      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"@schemaLocation\" : \"@schemaLocation\"    },    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"version\" : \"version\"  },  \"supportingService\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"relatedParty\" : [ {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  }, {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  } ],  \"isServiceEnabled\" : true,  \"startMode\" : \"startMode\",  \"name\" : \"name\",  \"category\" : \"category\",  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"}, {  \"serviceType\" : \"serviceType\",  \"note\" : [ {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceDate\" : \"serviceDate\",  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",  \"supportingResource\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@type\" : \"@type\",  \"hasStarted\" : true,  \"description\" : \"description\",  \"serviceOrder\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceRelationship\" : [ {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@baseType\" : \"@baseType\",  \"id\" : \"id\",  \"href\" : \"href\",  \"place\" : [ {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"state\" : { },  \"@schemaLocation\" : \"http://example.com/aeiou\",  \"isStateful\" : true,  \"serviceCharacteristic\" : [ {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  }, {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  } ],  \"serviceSpecification\" : {    \"targetServiceSchema\" : {      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"@schemaLocation\" : \"@schemaLocation\"    },    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"version\" : \"version\"  },  \"supportingService\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"relatedParty\" : [ {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  }, {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  } ],  \"isServiceEnabled\" : true,  \"startMode\" : \"startMode\",  \"name\" : \"name\",  \"category\" : \"category\",  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ServiceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Updates partially a Service", nickname = "patchService", notes = "This operation updates partially a Service entity.", response = Service.class, tags={ "service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated", response = Service.class),
        @ApiResponse(code = 400, message = "Bad Request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 404, message = "Not Found", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not allowed", response = Error.class),
        @ApiResponse(code = 409, message = "Conflict", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class) })
    @RequestMapping(value = "/service/{id}",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.PATCH)
    default ResponseEntity<Service> patchService(@ApiParam(value = "Identifier of the Service",required=true) @PathVariable("id") String id,@ApiParam(value = "The Service to be updated" ,required=true )  @Valid @RequestBody ServiceUpdate service) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"serviceType\" : \"serviceType\",  \"note\" : [ {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceDate\" : \"serviceDate\",  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",  \"supportingResource\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@type\" : \"@type\",  \"hasStarted\" : true,  \"description\" : \"description\",  \"serviceOrder\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceRelationship\" : [ {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@baseType\" : \"@baseType\",  \"id\" : \"id\",  \"href\" : \"href\",  \"place\" : [ {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"state\" : { },  \"@schemaLocation\" : \"http://example.com/aeiou\",  \"isStateful\" : true,  \"serviceCharacteristic\" : [ {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  }, {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  } ],  \"serviceSpecification\" : {    \"targetServiceSchema\" : {      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"@schemaLocation\" : \"@schemaLocation\"    },    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"version\" : \"version\"  },  \"supportingService\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"relatedParty\" : [ {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  }, {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  } ],  \"isServiceEnabled\" : true,  \"startMode\" : \"startMode\",  \"name\" : \"name\",  \"category\" : \"category\",  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"}", Service.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ServiceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Retrieves a Service by ID", nickname = "retrieveService", notes = "This operation retrieves a Service entity. Attribute selection is enabled for all first level attributes.", response = Service.class, tags={ "service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Service.class),
        @ApiResponse(code = 400, message = "Bad Request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 404, message = "Not Found", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not allowed", response = Error.class),
        @ApiResponse(code = 409, message = "Conflict", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class) })
    @RequestMapping(value = "/service/{id}",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.GET)
    default ResponseEntity<Service> retrieveService(@ApiParam(value = "Identifier of the Service",required=true) @PathVariable("id") String id,@ApiParam(value = "Comma-separated properties to provide in response") @Valid @RequestParam(value = "fields", required = false) String fields) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"serviceType\" : \"serviceType\",  \"note\" : [ {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"system\" : \"system\",    \"@baseType\" : \"@baseType\",    \"author\" : \"author\",    \"@type\" : \"@type\",    \"text\" : \"text\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceDate\" : \"serviceDate\",  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",  \"supportingResource\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@type\" : \"@type\",  \"hasStarted\" : true,  \"description\" : \"description\",  \"serviceOrder\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"serviceOrderItemId\" : \"serviceOrderItemId\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"serviceRelationship\" : [ {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"relationshipType\" : \"relationshipType\",    \"@baseType\" : \"@baseType\",    \"service\" : {      \"@referredType\" : \"@referredType\",      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"id\" : \"id\",      \"href\" : \"href\",      \"@schemaLocation\" : \"http://example.com/aeiou\"    },    \"@type\" : \"@type\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"@baseType\" : \"@baseType\",  \"id\" : \"id\",  \"href\" : \"href\",  \"place\" : [ {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"state\" : { },  \"@schemaLocation\" : \"http://example.com/aeiou\",  \"isStateful\" : true,  \"serviceCharacteristic\" : [ {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  }, {    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"valueType\" : \"valueType\",    \"name\" : \"name\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"value\" : { }  } ],  \"serviceSpecification\" : {    \"targetServiceSchema\" : {      \"@baseType\" : \"@baseType\",      \"@type\" : \"@type\",      \"@schemaLocation\" : \"@schemaLocation\"    },    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\",    \"version\" : \"version\"  },  \"supportingService\" : [ {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  }, {    \"@referredType\" : \"@referredType\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"http://example.com/aeiou\"  } ],  \"relatedParty\" : [ {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  }, {    \"@referredType\" : \"@referredType\",    \"role\" : \"role\",    \"@baseType\" : \"@baseType\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\",    \"@schemaLocation\" : \"@schemaLocation\"  } ],  \"isServiceEnabled\" : true,  \"startMode\" : \"startMode\",  \"name\" : \"name\",  \"category\" : \"category\",  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"}", Service.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ServiceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
